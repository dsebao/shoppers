/* ----------- Breakpoints ------------- */
$breakpoints: (xs: 576px,
    sm: 768px,
    md: 992px,
    lg: 1200px,
    xl: 1575px);

// MIN-WIDTH
@mixin respond-above($breakpoint) {

    @if map-has-key($breakpoints, $breakpoint) {

        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @media (min-width: $breakpoint-value) {
            @content;
        }
    }
}

// MAX-WIDTH
@mixin respond-below($breakpoint) {

    @if map-has-key($breakpoints, $breakpoint) {

        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @media (max-width: $breakpoint-value - 1) {
            @content;
        }
    }
}

// RESPOND BETWEEN
@mixin respond-between($lower, $upper) {
    // If both the lower and upper breakpoints exist in the map.
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
        // Get the lower and upper breakpoints.
        $lower-breakpoint: map-get($breakpoints, $lower);
        $upper-breakpoint: map-get($breakpoints, $upper);

        // Write the media query.
        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
            @content;
        }
    }
}


/* ----------- Colors ------------- */

$colors: (
    white: $white,
    black: $black,
    primary-color: $primary-color,
    secondary-color: $secondary-color,
);

@mixin gen-props($prefix, $property) {

    @each $color-name,
    $color in $colors {
        .#{$prefix}-#{$color-name} {
            #{$property}: $color;
        }
    }
}

@include gen-props('text', 'color');
@include gen-props('bg', 'background');
